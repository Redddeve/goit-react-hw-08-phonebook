{"version":3,"file":"static/js/729.c98f124b.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = createSelector(\n  [state => state.contacts.contacts.items],\n  items => items\n);\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFiltered = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts?.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectContactsObj = createSelector(\n  [selectFiltered, selectIsLoading, selectError],\n  (contacts, loading, error) => {\n    return { contacts, loading, error };\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (name === '') {\n      form.reset();\n      return;\n    }\n    const contact = {\n      name,\n      number,\n    };\n    const contExist = contacts?.find(\n      cont =>\n        cont.name.toLowerCase() === name.toLowerCase() || cont.number === number\n    );\n    if (contExist) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <form\n      className=\"flex flex-col gap-2.5 w-[500px] p-2.5 shadow-[0_0_5px_0_rgba(0,0,0,0.3)] mb-10 mt-5\"\n      onSubmit={onSubmit}\n    >\n      <label className=\"w-fit\" htmlFor=\"name\">\n        Name\n      </label>\n\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className=\"w-fit\" htmlFor=\"number\">\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        id=\"number\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button\n        className=\"w-fit py-2 px-8 bg-white cursor-pointer border border-gray-500 rounded-xl hover:text-white hover:bg-teal-800\"\n        type=\"submit\"\n      >\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsObj } from 'redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport Loader from 'components/Loader';\n\nconst ContactList = () => {\n  const { contacts, loading, error } = useSelector(selectContactsObj);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <ul className=\"flex gap-6 flex-col pt-2.5 pb-5\">\n        {loading && <Loader />}\n        {error && <p>{error}</p>}\n        {contacts?.map(cont => (\n          <li\n            className=\"flex justify-between items-center min-w-fit max-w-screen-sm p-1.5 shadow-[0_0_5px_0_rgba(0,0,0,0.3)]\"\n            key={cont.id}\n            id={cont.id}\n          >\n            {cont.name}: {cont.number}\n            <button\n              className=\"w-fit py-1 px-3 ml-4 bg-white cursor-pointer border border-gray-500 rounded-xl hover:text-white hover:bg-teal-800\"\n              onClick={() => onDelete(cont.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterInput = e => {\n    const filter = e.target.value.trim();\n    dispatch(updateFilter(filter));\n  };\n\n  return (\n    <div className=\"mb-5\">\n      <label className=\"mt-2.5\" htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        className=\"w-2/5\"\n        type=\"text\"\n        id=\"filter\"\n        onChange={onFilterInput}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h2 className=\"font-semibold\">Add contact</h2>\n      <ContactForm />\n\n      <h2 className=\"font-semibold\">Your contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFiltered","filter","item","toLowerCase","includes","selectContactsObj","isLoading","error","loading","dispatch","useDispatch","useSelector","_jsxs","className","onSubmit","e","preventDefault","form","currentTarget","elements","number","contact","cont","alert","addContact","reset","children","_jsx","htmlFor","type","id","pattern","title","required","_useSelector","useEffect","fetchContacts","_Fragment","Loader","onClick","deleteContact","onChange","target","trim","updateFilter","ContactForm","Filter","ContactList"],"sourceRoot":""}